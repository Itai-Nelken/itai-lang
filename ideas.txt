variable argument functions (variadic functions)
================================================
'args...' args (any valid identifier name works) can be of type Args which inherits from Vector<any*>. every element points to the place on the stack where the argument is, and using the get_as<T>() method they can be accesed casted to the correct type.

Inheritance
===========
private and public inheritance <-- probably don't want that, to complicated. want simple and nice yet powerful like C and GO.

Function literals (lambdas)
==========================
var adder = fn(int a, int b) -> int { return a + b; }; <-- direct assignemnt
var fn(int, int) -> int Adder; <-- as a type

